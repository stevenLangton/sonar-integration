@{
    ViewBag.Title = "Create";
}
<div class="row">
    @Html.Partial("_Tabs", new ViewDataDictionary { { "tabName", "create" } })
</div>
<h2>@ViewBag.Title.</h2>
<h3>@ViewBag.Message</h3>


<script src="~/Scripts/bootstrap.js"></script>

<div id="linkpage">
    <!-- knockout binding to this -->
    <div id="msgs"></div>
    <form id="myform" method="post" data-bind="submit: saveLinkForm" class="form-group input-group-sm">
        <ol class="breadcrumb">
            <li class="active">
                <strong>Collegue: </strong><span data-bind="text: $root.dataModel().ColleagueName  + ' (' + $root.dataModel().ColleagueId + ')'"></span>
            </li>
            <li class="active">
                <strong>Manager: </strong><span data-bind="text: $root.dataModel().ManagerName + ' (' + $root.dataModel().ManagerId + ')'"></span>
            </li>
        </ol>

        <!-- Columns are always 50% wide, on mobile and desktop -->
        <div class="row" data-bind="with: dataModel, visible: dataAvailable">
            <!--Looking Back -->
            <div class="col-xs-6">
                <h3>Looking Back</h3>
                <!-- LinkForm data items here -->

                <h4>QUESTIONS:</h4>
                <br />

                <!-- QUESTIONS Loop around this -->
                <div class="panel-group" id="accordion1" role="tablist" aria-multiselectable="true" data-bind="foreach: LookingBackQuestions">

                    <div class="panel panel-default">
                        <div class="panel-heading" role="tab">
                            <h4 class="panel-title">
                                <a role="button" data-toggle="collapse" data-parent="#accordion1" data-bind="attr:{href:'#collapse1'+ $index() }">
                                    <strong>Q.</strong><span data-bind="text: Question + ', Id=' + QuestionId, 'name': 'Question[' + QuestionId + '].Question'"></span>
                                </a>
                            </h4>
                        </div>

                        <!-- ko if: $index() == 0 -->
                        <div data-bind="attr:{id:'collapse1'+ $index()}" class="panel-collapse collapse in" role="tabpanel">
                            <div class="panel-body">
                                <span class="row">
                                    Colleague Comment:<br /><textarea data-bind="text: CollegueComment, value:CollegueComment" rows="4"></textarea><br />
                                    Manager Comment:<br /><textarea data-bind="text: ManagerComment, value:ManagerComment" rows="4"></textarea>
                                </span>
                            </div>
                        </div>
                        <!-- /ko -->
                        <!-- ko if: $index() != 0 -->
                        <div data-bind="attr:{id:'collapse1'+ $index()}" class="panel-collapse collapse" role="tabpanel">
                            <div class="panel-body">
                                <span class="row">
                                    Colleague Comment:<br /><textarea data-bind="text: CollegueComment, value:CollegueComment" rows="4"></textarea><br />
                                    Manager Comment:<br /><textarea data-bind="text: ManagerComment, value:ManagerComment" rows="4"></textarea>
                                </span>
                            </div>
                        </div>
                        <!-- /ko -->
                       
                    </div>

                </div>

            </div>



            

            <!-- Looking Forward -->
            <div class="col-xs-6">
                <h3>Looking Forward</h3>
                <!-- LinkForm data items here -->
        
                    <h4>QUESTIONS:</h4>
                    <br />
                    <!-- QUESTIONS Loop around this -->
                 

                        <div class="panel-group" id="accordion2" role="tablist" aria-multiselectable="true" data-bind="foreach: LookingFwdQuestions">

                                    <div class="panel panel-default">
                                        <div class="panel-heading" role="tab">
                                            <h4 class="panel-title">
                                                <a role="button" data-toggle="collapse" data-parent="#accordion2" data-bind="attr:{href:'#collapse2'+ $index() }">
                                                    <strong>Q.</strong><span data-bind="text: Question + ', Id=' + QuestionId, 'name': 'Question[' + QuestionId + '].Question'"></span>
                                                </a>
                                            </h4>
                                        </div>

                                        <!-- ko if: $index() == 0 -->
                                        <div data-bind="attr:{id:'collapse2'+ $index()}" class="panel-collapse collapse in" role="tabpanel">
                                            <div class="panel-body">
                                                <span class="row">
                                                    Colleague Comment:<br /><textarea data-bind="text: CollegueComment, value:CollegueComment" rows="4"></textarea><br />
                                                    Manager Comment:<br /><textarea data-bind="text: ManagerComment, value:ManagerComment" rows="4"></textarea>
                                                </span>
                                            </div>
                                        </div>
                                        <!-- /ko -->
                                        <!-- ko if: $index() != 0 -->
                                        <div data-bind="attr:{id:'collapse2'+ $index()}" class="panel-collapse collapse" role="tabpanel">
                                            <div class="panel-body">
                                                <span class="row">
                                                    Colleague Comment:<br /><textarea data-bind="text: CollegueComment, value:CollegueComment" rows="4"></textarea><br />
                                                    Manager Comment:<br /><textarea data-bind="text: ManagerComment, value:ManagerComment" rows="4"></textarea>
                                                </span>
                                            </div>
                                        </div>
                                        <!-- /ko -->


                                    </div>
                        </div>
                </div>
            

        </div>

        <br />
        <hr />
        <div class="container-fluid well row col-xs-12" style="text-align: left;">
            <div class="col-xs-6 right">
                Meeting Date: <input type="text" id="MeetingDate" data-bind="value: dataModel().MeetingDate" class="datepicker form-control" readonly name="MeetingDate" />
                Meeting Complete: <input id="Checkbox1" type="checkbox" data-bind="checked: dataModel().Completed" name="Completed" />
            </div><br />
            <div class="col-xs-12">
                <p class="right">
                    <button type="button" class="btn btn-default" data-bind="visible: $root.dataAvailable, click: saveLinkForm">Save</button>
                    &nbsp; <a href="pdf/new/?MeetingId=10" class="btn btn-default">Download</a>
                </p>
            </div>
        </div>
    </form>
</div><!-- / ko linkpage -->

<script type="text/javascript">
    require(["helpers", "jquery", "knockout", "moment", "linkDatePickers", "bootstrap-datepicker"], function (helpers, $, ko, moment, linkDatePickers, datepicker) {

        function PageViewModel() {

            var self = this;

            var meetingView;

            var buildViewModels = function (data) {
                // Refer to Model values http://localhost/JsPlc.Ssc.Link.Service/api/Meetings/?employeeId=1&periodId=1
                moment.locale("en-gb"); // Set Locale for moment (aka moment.locale("en-gb"))
                var meetingDate = moment(data.MeetingDate).format("L"); // we get dd/mm/yyyy

                meetingView = {
                    EmployeeId: data.EmployeeId,
                    ColleagueId: data.ColleagueId,
                    ManagerId: data.ManagerId,
                    PeriodId: data.PeriodId,
                    ManagerName: data.ManagerName,
                    ColleagueName: data.ColleagueName,
                    MeetingDate: meetingDate,
                    MeetingId: data.MeetingId,
                    Completed: data.Status,
                    LookingBackQuestions: [],
                    LookingFwdQuestions: [],
                    Questions: []
                };

                ko.utils.arrayForEach(data.Questions, function (ques) {
                    if (!ques.CollegueComment)
                        {ques.CollegueComment = "colleague comments here";} // NOTE TextArea and other input elements need to be bound to "value" not just text, otherwise we dont see user changes in model
                    if (!ques.ManagerComment)
                    { ques.ManagerComment = "manager comments here"; }
                });

                meetingView.LookingBackQuestions = data.Questions.slice(0, 2);
                meetingView.LookingFwdQuestions = data.Questions.slice(2, 5);

                //ko.utils.arrayForEach(data.Questions, function (ques) {
                //    meetingView.Questions.push(ques);
                //    // if no answers in question, add an answer model into question to receive input
                //    //if (!ques.AnswwerId)
                //            //AnswerId: 0, CollegueComment: "", ManagerComment: ""
                //    //}
                //});
                debugger;
                self.dataModel(meetingView);
            };
            self.dataModel = ko.observable(""); // LinkForm object
            self.dataAvailable = ko.observable(false);

            self.bind = function () { };

            // ### GET LinkForm Data (assume there is data, it will show up), we may have to build a Get method which returns a blank Link Meeting template
            self.loadPageData = function () {
                $.ajax({
                    url: "LinkForm/GetLinkForm/?employeeId=e006&periodId=1", // Hardcoded Meeting GET for now...
                    method: "GET"
                })
                    .done(function (data) {
                        if (data == "Error") {
                            $('#msgs').html("Error - no data");
                            self.dataAvailable(false);
                        }
                        else {
                            $('#msgs').html("Fetch success");
                            debugger;
                            buildViewModels(data);
                            self.dataAvailable(true);
                            self.bind();
                        }
                    })
                    .fail(function () {
                        self.dataAvailable(false);
                        $('#msgs').html("Error occured");

                        // if cannot load LinkMeeting for the given period
                    });
            }

            // ### POST LinkForm data back to server.
            self.saveLinkForm = function () {
                console.log("Form data:" + $('#myform').serialize());
                console.log("Form data(json):" + ko.toJSON(self.dataModel));
                console.log("Self.DataModel:" + self.dataModel());

                // copy all LookingFwdQuestions and LookingBackQuestions to Questions Array
                var data = self.dataModel();
                data.Questions = [];
                ko.utils.arrayForEach(data.LookingBackQuestions, function(ques) {
                    data.Questions.push(ques);
                });
                ko.utils.arrayForEach(data.LookingFwdQuestions, function (ques) {
                    data.Questions.push(ques);
                });
                debugger;
                // end copy questions to model.

                $.ajax({
                        url: "LinkForm/PostLinkForm",
                        method: "POST",
                        data: self.dataModel(),
                        contentType: 'application/x-www-form-urlencoded; charset=utf-8', // 'application/json'

                        // ## PostBack as FormCollection
                        // data: "linkForm"=self.dataModel
                        // contentType: 'application/x-www-form-urlencoded; charset=utf-8',

                        // ## Postback as Json
                        // data: JSON.stringify(model)
                        // contentType: 'application/json'
                        // dataType:"json",
                    })
                    .done(function(response) {
                        if (response.indexOf("StatusCode: 200") >= 0) {
                            window.alert("Meeting created");
                            $('#msgs').html("<strong>Meeting created</strong>");
                        } else {
                            window.alert("Meeting creation failed");
                            $('#msgs').html("<strong>Failed to create meeting : " + response + "</strong>");
                        }
                        // msg success and redirect to another page if needed
                        // Define a standard message format for Post(aka Create) Response returned,
                        //  which should contain location header for created resource.
                        // We should redirect to that returned resource location URL.
                        // Incase of new Creation, we will get a MeetingId back (which was 0 initially).
                    })
                    .fail(function(jqXhr, textStatus, errorThrown) {
                        // msg failure
                        window.alert("Meeting creation failed");
                        $('#msgs').html("<strong>Failed to create meeting:" + errorThrown + "</strong>");
                    });
            }
        }

        $(document).ready(function () {

            var vm = new PageViewModel();

            var binder = function () {
                debugger;
                ko.applyBindings(vm, $("#linkpage")[0]); // important - we have to refer to div element with index 0.
                $('.datepicker').datepicker();
            };
            vm.bind = binder;

            //linkDatePickers.datePickerInit();

            // TODO - use this later if we want to navigate to pages using query strings
            //var pageQueryParams = helpers.queryStringHelpers.getQueryParams(window.location.search);
            //var empId = pageQueryParams["employeeId"]
            //console.log(JSON.stringify(pageQueryParams, null, 2));

            // Show meeting data once loaded from GET
            vm.loadPageData();
        });
    });
</script>

<script src="~/Scripts/bootstrap.js"></script>
