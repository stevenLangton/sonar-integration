@{
    ViewBag.Title = "Create";
}

<h2>New Link Form</h2>
<div id="linkpage">
    <!-- knockout binding to this -->
    <div id="msgs"></div>
    <form id="myform" method="post" data-bind="submit: saveLinkForm">
        <ol class="breadcrumb">
            <li class="active">
                <strong>Collegue: </strong><span data-bind="text: $root.dataModel().EmployeeName  + ' (' + $root.dataModel().EmployeeId + ')'"></span>
            </li>
            <li class="active">
                <strong>Manager: </strong><span data-bind="text: $root.dataModel().ManagerName + ' (' + $root.dataModel().ManagerId + ')'"></span>
            </li>
        </ol>

        <!-- Columns are always 50% wide, on mobile and desktop -->
        <div class="row" data-bind="with: dataModel, visible: dataAvailable">
            <!--Looking Back -->
            <div class="col-xs-6">
                <h3>Looking Back</h3>
                <!-- LinkForm data items here -->
                <div style="border: solid 1px black;">
                    <h4>QUESTIONS:</h4>
                    <br />
                    <!-- QUESTIONS Loop around this -->
                    <div data-bind="foreach: LookingBackQuestions">
                        <div class="panel-group" data-bind="'id': 'accordion' + QuestionId" role="tablist" aria-multiselectable="true">
                            <div class="panel panel-default">
                                <div class="panel-heading" role="tab" data-bind="'id': 'heading' + QuestionId">
                                    <h4 class="panel-title">
                                        <a role="button" data-toggle="collapse" data-bind="'data-parent': '#accordion' + QuestionId, href: '#collapse' + QuestionId" aria-expanded="true" aria-controls="collapseOne1">
                                            <strong>Q.</strong><span data-bind="text: Question + ', Id=' + QuestionId, 'name': 'Question[' + QuestionId + '].Question'"></span>
                                        </a>
                                        <span class="row">
                                            Colleague Comment:<br /><textarea data-bind="text: CollegueComment, 'name': 'CollegueComment'" cols="400" rows="4"></textarea><br />
                                            Manager Comment:<br /><textarea data-bind="text: ManagerComment, 'name': 'ManagerComment'" cols="400" rows="4"></textarea>
                                        </span>
                                    </h4>
                                </div>

                                <div data-bind="id: '#collapse' + QuestionId" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingOne">
                                    <div class="panel-body">
                                        <!-- text areas for answers here -->
                                    </div>
                                </div>
                            </div><!-- / question -->
                        </div>

                    </div>
                </div>
            </div>
            <!-- Looking Forward -->
            <div class="col-xs-6">
                <h3>Looking Forward</h3>
                <!-- LinkForm data items here -->
                <div style="border: solid 1px black;">
                    <h4>QUESTIONS:</h4>
                    <br />
                    <!-- QUESTIONS Loop around this -->
                    <div data-bind="foreach: LookingFwdQuestions">
                        <div class="panel-group" data-bind="'id': 'accordion' + QuestionId" role="tablist" aria-multiselectable="true">
                            <div class="panel panel-default">
                                <div class="panel-heading" role="tab" data-bind="'id': 'heading' + QuestionId">
                                    <h4 class="panel-title">
                                        <a role="button" data-toggle="collapse" data-bind="'data-parent': '#accordion' + QuestionId, href: '#collapse' + QuestionId" aria-expanded="true" aria-controls="collapseOne1">
                                            <strong>Q.</strong><span data-bind="text: Question + ', Id=' + QuestionId, 'name': 'Question[' + QuestionId + '].Question'"></span>
                                        </a>
                                        <span class="row">
                                            Colleague Comment:<br /><textarea data-bind="text: CollegueComment, 'name': 'CollegueComment'" cols="400" rows="4"></textarea><br />
                                            Manager Comment:<br /><textarea data-bind="text: ManagerComment, 'name': 'ManagerComment'" cols="400" rows="4"></textarea>
                                        </span>
                                    </h4>
                                </div>

                                <div data-bind="id: 'collapse' + QuestionId" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingOne">
                                    <div class="panel-body">
                                        <!-- text areas for answers here -->
                                    </div>
                                </div>
                            </div><!-- / question -->
                        </div>
                    </div>
                </div>
            </div>

        </div>

        <br />
        <hr />
        <div class="container-fluid well row col-xs-12" style="text-align: left;">
            <div class="col-xs-6 right">
                Meeting Date: <input type="text" id="MeetingDate" data-bind="value: dataModel().MeetingDate" name="MeetingDate" /><br />
                Complete <input id="Checkbox1" type="checkbox" data-bind="checked: dataModel().Completed" name="Completed" />
            </div>
            <div class="col-xs-4 right">
                <p>
                    <button type="button" class="btn btn-default" data-bind="visible: $root.dataAvailable, click: saveLinkForm">Save</button>
                    &nbsp; <a href="pdf/new/?MeetingId=10" class="btn btn-default">Download</a>
                </p>
            </div>
        </div>
    </form>
</div><!-- / ko linkpage -->

<script type="text/javascript">
    require(["jquery", "knockout", "moment"], function ($, ko, moment) {

        function PageViewModel() {

            var self = this;
            var buildViewModels = function (data) {
                var meetingLocaleDate = moment(data.MeetingDate).format("DD/MM/YYYY");
                var meet = {
                    EmployeeId: data.EmployeeId,
                    ManagerId: data.ManagerId,
                    ManagerName: data.ManagerName,
                    EmployeeName: data.EmployeeName,
                    MeetingDate: meetingLocaleDate,
                    MeetingId: data.MeetingId,
                    Completed: data.Status,
                    LookingBackQuestions: ko.observableArray([]),
                    LookingFwdQuestions: ko.observableArray([]),
                    Questions: []
                };
                meet.LookingBackQuestions(data.Questions.slice(0, 2));
                meet.LookingFwdQuestions(data.Questions.slice(2, 5));

                //ko.utils.arrayForEach(data.Questions, function (ques) {
                //    meet.Questions.push(ques);
                //    // if no answers in question, add an answer model into question to receive input
                //    //if (!ques.AnswwerId)
                //            //AnswerId: 0, CollegueComment: "", ManagerComment: ""
                //    //}
                //});
                debugger;
                self.dataModel(meet);
            };
            self.dataModel = ko.observable(""); // LinkForm object
            self.dataAvailable = ko.observable(false);

            self.bind = function () { };

            // ### GET LinkForm Data (assume there is data, it will show up), we may have to build a Get method which returns a blank Link Meeting template
            self.loadPageData = function () {
                $.ajax({
                    url: "LinkForm/GetLinkForm/?employeeId=1&periodId=1",
                    method: "GET"
                })
                    .done(function (data) {
                        if (data == "Error") {
                            $('#msgs').html("Error - no data");
                            self.dataAvailable(false);
                        }
                        else {
                            $('#msgs').html("Fetch success");
                            debugger;
                            buildViewModels(data);
                            // hardcode some data (ideally, this data is populated by user on form)

                            //data.MeetingDate = "03/10/2015";
                            //data.Completed = true;
                            //self.dataModel(data);

                            self.dataAvailable(true);
                            self.bind();
                        }
                    })
                    .fail(function () {
                        self.dataAvailable(false);
                        $('#msgs').html("Error occured");

                        // if cannot load LinkMeeting for the given period
                    });
            }

            // ### POST LinkForm data back to server.
            self.saveLinkForm = function () {
                console.log("Form data:" + $('#myform').serialize());
                console.log("Form data(json):" + ko.toJSON(self.dataModel));
                console.log("Self.DataModel:" + self.dataModel());
                // copy all LookingFwdQuestions and LookingBackQuestions to Questions Array
                debugger;
                var data = self.dataModel();
                ko.utils.arrayForEach(data.LookingBackQuestions(), function(ques) {
                    data.Questions.push(ques);
                });
                ko.utils.arrayForEach(data.LookingFwdQuestions(), function (ques) {
                    data.Questions.push(ques);
                });
                // end copy questions to model.

                
                $.ajax({
                    url: "LinkForm/PostLinkForm",
                    method: "POST",
                    data:  self.dataModel(), //$('#myform').serialize(), //"linkForm":  self.dataModel },
                    contentType: 'application/x-www-form-urlencoded; charset=utf-8', // 'application/json'
                })
                .done(function (data) {
                    // msg success and redirect to another page if needed
                    // Define a standard message format for Post(aka Create) Response returned,
                    //  which should contain location header for created resource.
                    // We should redirect to that returned resource location URL.
                    // Incase of new Creation, we will get a MeetingId back (which was 0 initially).
                })
                .fail(function (jqXhr, textStatus, errorThrown) {
                    // msg failure
                });
            }
        }

        // Not used yet.
        function MeetingViewModel() {
            self.Id = ko.observable('');
            self.MeetingDate = ko.observable('');
            self.Completed = ko.observable('');
            self.Questions = ko.observableArray([]);
        }

        function QuestionViewModel() {
            self.Id = ko.observable('');
            self.QuestionText = ko.observable('');
            self.Answers = ko.observableArray([]);
        }

        function AnswerViewModel() {
            self.Id = ko.observable('');
            self.EmployeeComments = ko.observable('');
            self.ManagerComments = ko.observable('');
        }

        $(document).ready(function () {

            var vm = new PageViewModel();

            var binder = function () {
                debugger;
                ko.applyBindings(vm, $("#linkpage")[0]); // important - we have to refer to div element with index 0.
            };
            vm.bind = binder;

            // Show meeting data once loaded from GET
            vm.loadPageData();
        });
    });
</script>
